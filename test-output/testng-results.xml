<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1011" started-at="2022-02-01T12:35:44 IST" finished-at="2022-02-01T12:35:45 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@5c072e3f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="1011" started-at="2022-02-01T12:35:44 IST" finished-at="2022-02-01T12:35:45 IST">
      <class name="runner.CucumberRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.CucumberRunner@5c072e3f]" name="setUpClass" is-config="true" duration-ms="531" started-at="2022-02-01T12:35:44 IST" finished-at="2022-02-01T12:35:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@5c072e3f]" name="runScenario" duration-ms="291" started-at="2022-02-01T12:35:44 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-02-01T12:35:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["As a user I want to login as valid user"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login feature]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@5c072e3f]" name="runScenario" duration-ms="81" started-at="2022-02-01T12:35:44 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-02-01T12:35:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["As a user I will pass invalid credentials for login"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login feature]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'login page is displayed enter invalid username and password' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("login page is displayed enter invalid username and password")
public void login_page_is_displayed_enter_invalid_username_and_password() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("error message should display")
public void error_message_should_display() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'login page is displayed enter invalid username and password' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("login page is displayed enter invalid username and password")
public void login_page_is_displayed_enter_invalid_username_and_password() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("error message should display")
public void error_message_should_display() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:135)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:131)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.CucumberRunner@5c072e3f]" name="tearDownClass" is-config="true" duration-ms="24" started-at="2022-02-01T12:35:45 IST" finished-at="2022-02-01T12:35:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.CucumberRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
